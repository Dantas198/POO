#BlueJ class context
comment0.target=ContribuinteEmpresarial
comment1.params=
comment1.target=ContribuinteEmpresarial()
comment1.text=\n\ Construtor\ vazio\n
comment10.params=
comment10.target=deductors.Deductor\ getDeductor()
comment10.text=\n\ Devolve\ o\ deductor\ empresarial\ \n
comment2.params=c
comment2.target=ContribuinteEmpresarial(ContribuinteEmpresarial)
comment2.text=\n\ Construtor\ parametrizado\n
comment3.params=a
comment3.target=void\ setAtividadesEmpresa(java.util.Map)
comment3.text=\n\ @param\ a,\ atividades\ economicas\ a\ inserir\n\ Atualiza\ as\ atividades\ economicas\ de\ uma\ empresa\n
comment4.params=
comment4.target=java.util.Map\ getAtividadesEmpresa()
comment4.text=\n\ Devolve\ as\ atividades\ economicas\ de\ uma\ empresa\n\ @returns\ Map\ de\ atividadesEconomicas\n
comment5.params=
comment5.target=int\ getCountFaturas()
comment5.text=\n\ Devolve\ o\ contador\ de\ faturas\ emitidas\ pela\ empresa\n
comment6.params=cliente\ descricao\ despesa
comment6.target=fatura.Fatura\ emiteFatura(ContribuinteIndividual,\ java.lang.String,\ float)
comment6.text=\n\ @param\ cliente,\ quem\ efetuou\ a\ despesa\n\ @param\ descricao,\ descricao\ da\ despesa\n\ @param\ despesa,\ valor\ da\ despesa\n\ Emite\ uma\ fatura\ por\ parte\ da\ empresa\n\ @returns\ res,\ a\ fatura\ emitida\n
comment7.params=nifCliente\ descricao\ despesa
comment7.target=fatura.Fatura\ emiteFatura(int,\ java.lang.String,\ float)
comment7.text=\n\ @param\ nifCliente,\ quem\ efetuou\ a\ despesa\n\ @param\ descricaa,\ descricao\ da\ despesa\n\ @param\ despesa,\ valor\ da\ despesa\n\ Emite\ uma\ fatura\ por\ parte\ da\ empresa\n\ @returns\ res,\ a\ fatura\ emitida\n
comment8.params=
comment8.target=ContribuinteEmpresarial\ clone()
comment8.text=\n\ Clone\n
comment9.params=
comment9.target=double\ reducaoImposto()
comment9.text=\n\ Calcula\ a\ reducao\ de\ imposto\ a\ implementar.\n
numComments=11
