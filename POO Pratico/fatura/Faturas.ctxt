#BlueJ class context
comment0.target=Faturas
comment1.params=
comment1.target=int\ getNumFaturas()
comment1.text=\r\n\ Devolve\ o\ n\u00FAmero\ associado\ a\ uma\ determinada\ fatura.\r\n
comment10.params=
comment10.target=java.util.List\ getTenContribuintesMostDespesa()
comment10.text=\r\n\ Devolve\ uma\ lista\ com\ os\ 10\ contribuintes\ com\ mais\ despesas\r\n\ @returns\ Lista<Pair<nif,\ despesa>>\r\n
comment11.params=nif\ beg\ end
comment11.target=java.util.List\ getFaturasFromEmitenteBetweenDate(int,\ java.time.LocalDateTime,\ java.time.LocalDateTime)
comment11.text=\r\n\ @param\ nifn\ nif\ do\ contribuinte\r\n\ @param\ beg,\ data\ inicial\r\n\ @param\ end,\ data\ final\r\n\ Apresenta\ a\ lista\ de\ todas\ as\ faturas\ entre\ beg\ e\ end\r\n\ @returns\ List<Fatura>\r\n
comment12.params=c\ numFatura\ a
comment12.target=void\ associaAtividadeEconcomica(contribuintes.Contribuinte,\ int,\ atividadesEconomicas.AtividadeEconomica)
comment12.text=\r\n\ @param\ c,\ contribuinte\r\n\ @param\ numFatura,\ numero\ de\ cada\ fatura\r\n\ @param\ a,\ atividade\ economica\r\n\ Associa\ uma\ atividade\ economica\ a\ uma\ fatura\ caso\ ela\ n\u00E3o\ esteja\ ja\ emitida\r\n
comment13.params=c\ numFatura\ nova
comment13.target=void\ corrigeAtividadeFatura(contribuintes.Contribuinte,\ int,\ atividadesEconomicas.AtividadeEconomica)
comment13.text=\r\n\ @param\ c,\ contribuinte\r\n\ @param\ numFatura,\ numero\ de\ cada\ fatura\r\n\ @param\ nova,\ atividade\ economica\r\n\ Corrige\ uma\ atividade\ economica,\ ou\ seja,\ atualiza\ a\ atividade\ nas\ faturas\ pendentes\r\n
comment14.params=nifEmitente
comment14.target=float\ totalFaturado(int)
comment14.text=\r\n\ @param\ nifEmitente,\ nif\ do\ emitente\r\n\ Devolve\ o\ total\ faturado\ por\ um\ contribuinte\r\n\ @returns\ total\ faturado\r\n
comment15.params=nif
comment15.target=java.util.List\ getFaturasByDate(int)
comment15.text=\r\n\ @param\ nif,\ nif\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\ ordendas\ por\ data\r\n\ @returns\ x,\ List<Fatura>\r\n
comment16.params=nif
comment16.target=java.util.List\ getFaturasByValor(int)
comment16.text=\r\n\ @param\ nif,\ nif\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\ ordenadas\ por\ valor\r\n\ @returns\ x,\ List<Fatura>\r\n
comment17.params=nif
comment17.target=java.util.List\ getFaturasByValorDecrescente(int)
comment17.text=\r\n\ @param\ nif,\ nif\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\ ordenadas\ por\ valor\ decrescente\r\n\ @returns\ x,\ List<Fatura>\r\n
comment18.params=
comment18.target=Faturas()
comment18.text=\r\n\ Construtor\ vazio\ de\ Faturas\r\n
comment2.params=f
comment2.target=void\ addFatura(Fatura)
comment2.text=\r\n\ @param\ f,\ fatura\ a\ adicionar\r\n\ M\u00E9todo\ que\ adiciona\ uma\ fatura\ ao\ HashMap\ faturasPendentes,\ caso\ haja\ uma\r\n\ AtividadeEconomica\ na\ fatura\r\n
comment3.params=nif
comment3.target=java.util.List\ getFaturasFromContribuinte(int)
comment3.text=\r\n\ @param\ nif\ do\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\r\n\ @returns\ List<Fatura>\r\n
comment4.params=nif
comment4.target=java.util.List\ getFaturaPendentesFromContribuinte(int)
comment4.text=\r\n\ @param\ nif\ do\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\ pendentes\r\n\ @returns\ List<Fatura>\r\n
comment5.params=nif
comment5.target=java.util.List\ getFaturasFromEmitente(int)
comment5.text=\r\n\ @param\ nif\ do\ contribuinte\r\n\ Devolve\ uma\ lista\ de\ faturas\ que\ foram\ emitidas\ por\ o\ contribuinte\ com\ aquele\ nif\r\n\ @returns\ List<Fatura>\ \r\n
comment6.params=faturas
comment6.target=float\ getDeducao(java.util.List)
comment6.text=\r\n\ @param\ faturas,\ uma\ lista\ de\ faturas\ \r\n\ Calcula\ a\ despesa\ deduzida\ de\ uma\ lista\ de\ faturas.\r\n\ @returns\ count,\ total\ da\ despesa\ deduzida\ daquelas\ faturas\r\n
comment7.params=nifsAgregado\ nif
comment7.target=float\ getNFAcumuladoAgregado(java.util.List,\ int)
comment7.text=\r\n\ @param\ nifsAgregado,\ nifs\ do\ agregado\ familiar\ de\ um\ contribuinte\r\n\ @param\ nif,\ nif\ do\ Contribuinte\r\n\ Calcula\ a\ despesa\ deduzida\ de\ todos\ no\ agregado\ familiar.\r\n\ @returns\ Supercount,\ total\ da\ despesa\ deduzida\ do\ agregado\ \r\n
comment8.params=c
comment8.target=javafx.util.Pair\ getDespesasAndDFAcumulado(contribuintes.Contribuinte)
comment8.text=\r\n\ @param\ c,\ contribuinte\r\n\ Devolve\ um\ par\ com\ a\ lista\ de\ faturas\ de\ um\ contribuinte\ assim\ como\ a\ sua\ despesa\r\n\ deduzida,\ juntamente\ com\ a\ do\ agregado\r\n\ @returns\ res,\ Pair<faturas,\ despesa\ deduzida>\r\n
comment9.params=c
comment9.target=float\ getDFEmpresa(contribuintes.Contribuinte)
comment9.text=\r\n\ @param\ c,\ contribuinte\r\n\ Calcula\ o\ montante\ de\ deducoes\ fiscais\ fornecidas\ todas\ as\ despesas\ emitidas\ por\ uma\ empresa\r\n\ @returns\ count,\ total\ de\ deducoes\r\n
numComments=19
